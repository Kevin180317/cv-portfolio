---
import React from "@/assets/icons/React.astro";
import AstroIcon from "@/assets/icons/Astroicon.astro";
import NextJS from "@/assets/icons/Next.astro";
import TypeScript from "@/assets/icons/TypeScript.astro";
import HTML from "@/assets/icons/Html.astro";
import CSS from "@/assets/icons/Css.astro";
import JavaScript from "@/assets/icons/Javascript.astro";
import Node from "@/assets/icons/Node.astro";
import Python from "@/assets/icons/Python.astro";
import MySQL from "@/assets/icons/Mysql.astro";
import Github from "@/assets/icons/Github.astro";
import Kotlin from "@/assets/icons/Kotlin.astro";
import Java from "@/assets/icons/Java.astro";
import Cpanel from "@/assets/icons/Cpanel.astro";
import Vue from "@/assets/icons/Vue.astro";
import Laravel from "@/assets/icons/Laravel.astro";
import Supa from "@/assets/icons/Supa.astro";
import JWT from "@/assets/icons/JWT.astro";
import Express from "@/assets/icons/Express.astro";
import Expo from "@/assets/icons/Expo.astro";
import Todoist from "@/assets/icons/Todoist.astro";
import Slack from "@/assets/icons/Slack.astro";
import Vite from "@/assets/icons/Vite.astro";
import Firebase from "@/assets/icons/Firebase.astro";
import Tailwind from "@/assets/icons/Tailwind.astro";
import Motion from "@/assets/icons/Motion.astro";
import Google from "@/assets/icons/Google.astro";
import Meta from "@/assets/icons/Meta.astro";
import Mongo from "@/assets/icons/Mongo.astro";
import Vercel from "@/assets/icons/Vercel.astro";
import Netlify from "@/assets/icons/Netlify.astro";
import Stripe from "@/assets/icons/Stripe.astro";
const { URL } = Astro.props;

// Professional Experience
const experience =
  URL === "/en/"
    ? [
        {
          title: "Front-end & Back-end Developer",
          company: "Ecommetrica",
          period: "September 2023 - Present",
          responsibilities: [
            "Front-end web development with React js, Vite js, Next js, Astro js",
            "Back-end development with Express, ApiREST, JWT, Oauth, MySQL",
            "User interfaces using Figma and task control with Todoist platform",
            "SEO through Google Analytics, Meta Pixel and Google Tag Manager",
          ],
        },
        {
          title: "Full Stack Developer",
          company: "Cenyca University",
          period: "October 2022 - July 2023",
          responsibilities: [
            "Development of a web platform focused on students, divided into 3 modules: Students, Teachers and Academic Control",
            "All developed with Laravel PHP/Vue js - Tailwind CSS – MySQL",
          ],
        },
        {
          title: "Mobile App Developer",
          company: "Prometheus Freelancer",
          period: "",
          responsibilities: [
            "We developed a mobile app for people in palliative care that allowed patients to schedule appointments with a wide catalog of doctors, with a flow similar to Doctoralia",
            "The app was developed in Android Java and iOS Swift, connected to Google Firebase and OneSignal API for push notifications",
          ],
        },
      ]
    : [
        {
          title: "Desarrollador Front-end & Back-end",
          company: "Ecommetrica",
          period: "Septiembre 2023 - Presente",
          responsibilities: [
            "Desarrollo web Front-end con React js, Vite js, Next js, Astro js",
            "Desarrollo Back-end con Express, ApiREST, JWT, Oauth, MySQL",
            "Interfaces de usuario con Figma y control de tareas con la plataforma Todoist",
            "SEO mediante Google Analytics, Meta Pixel y Google Tag Manager",
          ],
        },
        {
          title: "Desarrollador Full Stack",
          company: "Universidad Cenyca",
          period: "Octubre 2022 - Julio 2023",
          responsibilities: [
            "Desarrollo de una plataforma web enfocada en estudiantes dividida en 3 módulos: Alumnos, Docentes y Control Académico",
            "Todo desarrollado con Laravel PHP/Vue js - Tailwind CSS – MySQL",
          ],
        },
        {
          title: "Desarrollador de Aplicaciones Móviles",
          company: "Prometheus Freelancer",
          period: "",
          responsibilities: [
            "Desarrollamos una app móvil para personas en cuidados paliativos que permitía agendar citas con un catálogo amplio de doctores, con un flujo similar a Doctoralia",
            "La app fue desarrollada en Android Java y iOS Swift, conectada con Google Firebase y la API de OneSignal para notificaciones push",
          ],
        },
      ];

// Education
const education =
  URL === "/en/"
    ? [
        {
          title: "Bachelor in Intelligent Systems Technologies",
          institution: "UDCI",
          period: "2017-2021",
          description:
            "Relevant courses: Software and Hardware, introduction to Python, line follower workshop, sprinter and juice bot from 5 to 15 kg",
        },
      ]
    : [
        {
          title: "Lic. Tecnologías en Sistemas Inteligentes",
          institution: "UDCI",
          period: "2017-2021",
          description:
            "Cursos relevantes: Software y Hardware, introducción a Python, taller de seguidor de línea, sprinter y juice bot de 5 a 15 kg",
        },
      ];

// Skills organizadas por categorías mejoradas
const skills =
  URL === "/en/"
    ? {
        frontend: [
          { name: "HTML", icon: "html" },
          { name: "CSS", icon: "css" },
          { name: "JavaScript", icon: "javascript" },
          { name: "TypeScript", icon: "typescript" },
          { name: "React", icon: "react" },
          { name: "Next.js", icon: "nextjs" },
          { name: "Astro", icon: "astro" },
          { name: "Vue.js", icon: "vue" },
          { name: "Tailwind CSS", icon: "tailwind" },
          { name: "Motion", icon: "motion" },
        ],
        backend: [
          { name: "Node.js", icon: "node" },
          { name: "Express", icon: "express" },
          { name: "PHP/Laravel", icon: "php" },
          { name: "Python", icon: "python" },
          { name: "Supabase", icon: "supabase" },
          { name: "JWT", icon: "jwt" },
          { name: "Stripe", icon: "stripe" }, // Añadido Stripe
        ],
        mobile: [
          { name: "Java (Android)", icon: "java" },
          { name: "Kotlin", icon: "kotlin" },
          { name: "Expo", icon: "expo" },
        ],
        databases: [
          { name: "MySQL", icon: "mysql" },
          { name: "Firebase", icon: "firebase" },
          { name: "Supabase", icon: "supabase" },
          { name: "MongoDB", icon: "mongo" }, // Añadido MongoDB
        ],
        tools: [
          { name: "Git", icon: "git" },
          { name: "cPanel", icon: "cpanel" },
          { name: "Vite", icon: "vite" },
          { name: "Todoist", icon: "todoist" },
          { name: "Slack", icon: "slack" },
          { name: "Vercel", icon: "vercel" }, // Añadido Vercel
          { name: "Netlify", icon: "netlify" }, // Añadido Netlify
          { name: " Google Analytics", icon: "google" },
          { name: "Meta Pixel", icon: "meta" },
        ],
      }
    : {
        frontend: [
          { name: "HTML", icon: "html" },
          { name: "CSS", icon: "css" },
          { name: "JavaScript", icon: "javascript" },
          { name: "TypeScript", icon: "typescript" },
          { name: "React", icon: "react" },
          { name: "Next.js", icon: "nextjs" },
          { name: "Astro", icon: "astro" },
          { name: "Vue.js", icon: "vue" },
          { name: "Tailwind CSS", icon: "tailwind" },
          { name: "Motion", icon: "motion" },
        ],
        backend: [
          { name: "Node.js", icon: "node" },
          { name: "Express", icon: "express" },
          { name: "PHP/Laravel", icon: "php" },
          { name: "Python", icon: "python" },
          { name: "Supabase", icon: "supabase" },
          { name: "JWT", icon: "jwt" },
          { name: "Stripe", icon: "stripe" }, // Añadido Stripe
        ],
        mobile: [
          { name: "Java (Android)", icon: "java" },
          { name: "Kotlin", icon: "kotlin" },
          { name: "Expo", icon: "expo" },
        ],
        databases: [
          { name: "MySQL", icon: "mysql" },
          { name: "Firebase", icon: "firebase" },
          { name: "Supabase", icon: "supabase" },
          { name: "MongoDB", icon: "mongo" }, // Añadido MongoDB
        ],
        tools: [
          { name: "Git", icon: "git" },
          { name: "cPanel", icon: "cpanel" },
          { name: "Vite", icon: "vite" },
          { name: "Todoist", icon: "todoist" },
          { name: "Slack", icon: "slack" },
          { name: "Vercel", icon: "vercel" }, // Añadido Vercel
          { name: "Netlify", icon: "netlify" }, // Añadido Netlify
          { name: " Google Analytics", icon: "google" },
          { name: "Meta Pixel", icon: "meta" },
        ],
      };
---

<section class="space-y-12">
  <!-- Professional Experience Section -->
  <div class="bg-gray-50 rounded-xl">
    <h2 class="text-2xl font-bold text-orange-600 mb-8 text-start">
      {URL === "/en/" ? "Professional Experience" : "Experiencia Profesional"}
    </h2>

    <div class="space-y-6">
      {
        experience.map((exp) => (
          <div class="bg-white border border-gray-200 rounded-lg p-6 hover:shadow-md transition-all duration-200 hover:border-orange-200">
            <div class="flex flex-col md:flex-row md:justify-between md:items-start mb-4">
              <div>
                <h3 class="text-lg font-semibold text-gray-900">{exp.title}</h3>
                <p class="text-orange-600 font-medium">{exp.company}</p>
              </div>
              {exp.period && (
                <span class="text-sm font-medium text-gray-600 bg-gray-100 px-3 py-1 rounded-full mt-2 md:mt-0 self-start">
                  {exp.period}
                </span>
              )}
            </div>
            <ul class="space-y-2">
              {exp.responsibilities.map((resp) => (
                <li class="text-gray-600 flex items-start">
                  <span class="w-2 h-2 bg-orange-500 rounded-full mr-3 mt-2 flex-shrink-0" />
                  {resp}
                </li>
              ))}
            </ul>
          </div>
        ))
      }
    </div>
  </div>

  <!-- Education Section -->
  <div class="bg-gray-50 rounded-xl">
    <h2 class="text-2xl font-bold text-orange-600 mb-8 text-start">
      {URL === "/en/" ? "Education" : "Educación"}
    </h2>

    <div class="space-y-4">
      {
        education.map((edu) => (
          <div class="bg-white border border-gray-200 rounded-lg p-6 hover:shadow-md transition-all duration-200 hover:border-orange-200">
            <div class="flex flex-col md:flex-row md:justify-between md:items-start mb-2">
              <div>
                <h3 class="text-lg font-semibold text-gray-900">{edu.title}</h3>
                <p class="text-orange-600 font-medium">{edu.institution}</p>
              </div>
              <span class="text-sm font-medium text-gray-600 bg-gray-100 px-3 py-1 rounded-full mt-2 md:mt-0 self-start">
                {edu.period}
              </span>
            </div>
            <p class="text-gray-600">{edu.description}</p>
          </div>
        ))
      }
    </div>
  </div>

  <div class="bg-gradient-to-br from-gray-50 to-gray-100 rounded-2xl">
    <h2 class="text-3xl font-bold text-orange-600 mb-8 text-start">
      {URL === "/en/" ? "Skills" : "Habilidades"}
    </h2>

    <div class="space-y-4">
      <!-- Frontend Accordion -->
      <div
        class="bg-white rounded-xl shadow-md overflow-hidden border border-gray-200 hover:shadow-lg transition-all duration-300"
      >
        <button
          class="w-full px-6 py-4 flex items-center justify-between bg-gradient-to-r from-blue-50 to-cyan-50 hover:from-blue-100 hover:to-cyan-100 transition-all duration-300 group"
          onclick="toggleAccordion('frontend')"
        >
          <div class="flex items-center">
            <div
              class="w-4 h-4 bg-gradient-to-r from-blue-500 to-cyan-500 rounded-full mr-4"
            >
            </div>
            <h3
              class="text-xl font-bold text-gray-800 group-hover:text-blue-600 transition-colors"
            >
              Frontend Development
            </h3>
          </div>
          <svg
            id="frontend-arrow"
            class="w-6 h-6 text-blue-500 transform transition-transform duration-300"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M19 9l-7 7-7-7"></path>
          </svg>
        </button>
        <div id="frontend-content" class="hidden px-6 pb-6">
          <div class="grid grid-cols-2 md:grid-cols-4 gap-4 pt-4">
            {
              skills.frontend.map((skill) => (
                <div class="flex flex-col items-center p-4 bg-gradient-to-br from-blue-50 to-cyan-50 rounded-lg hover:from-blue-100 hover:to-cyan-100 transition-all duration-200 hover:shadow-md group">
                  <span class="mb-2">
                    {skill.icon === "html" && <HTML class="w-10 h-10" />}
                    {skill.icon === "css" && <CSS class="w-10 h-10" />}
                    {skill.icon === "javascript" && (
                      <JavaScript class="w-10 h-10" />
                    )}
                    {skill.icon === "typescript" && (
                      <TypeScript class="w-10 h-10" />
                    )}
                    {skill.icon === "react" && <React class="w-10 h-10" />}
                    {skill.icon === "nextjs" && <NextJS class="w-10 h-10" />}
                    {skill.icon === "astro" && <AstroIcon class="w-10 h-10" />}
                    {skill.icon === "tailwind" && (
                      <Tailwind class="w-10 h-10" />
                    )}
                    {skill.icon === "vue" && <Vue class="w-10 h-10" />}
                    {skill.icon === "motion" && <Motion class="w-10 h-10" />}
                  </span>
                  <span class="text-sm font-medium text-gray-700 text-center group-hover:text-blue-700 transition-colors">
                    {skill.name}
                  </span>
                </div>
              ))
            }
          </div>
        </div>
      </div>

      <!-- Backend Accordion -->
      <div
        class="bg-white rounded-xl shadow-md overflow-hidden border border-gray-200 hover:shadow-lg transition-all duration-300"
      >
        <button
          class="w-full px-6 py-4 flex items-center justify-between bg-gradient-to-r from-green-50 to-emerald-50 hover:from-green-100 hover:to-emerald-100 transition-all duration-300 group"
          onclick="toggleAccordion('backend')"
        >
          <div class="flex items-center">
            <div
              class="w-4 h-4 bg-gradient-to-r from-green-500 to-emerald-500 rounded-full mr-4"
            >
            </div>
            <h3
              class="text-xl font-bold text-gray-800 group-hover:text-green-600 transition-colors"
            >
              Backend Development
            </h3>
          </div>
          <svg
            id="backend-arrow"
            class="w-6 h-6 text-green-500 transform transition-transform duration-300"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M19 9l-7 7-7-7"></path>
          </svg>
        </button>
        <div id="backend-content" class="hidden px-6 pb-6">
          <div class="grid grid-cols-2 md:grid-cols-4 gap-4 pt-4">
            {
              skills.backend.map((skill) => (
                <div class="flex flex-col items-center p-4 bg-gradient-to-br from-green-50 to-emerald-50 rounded-lg hover:from-green-100 hover:to-emerald-100 transition-all duration-200 hover:shadow-md group">
                  <span class="mb-2">
                    {skill.icon === "node" && <Node class="w-10 h-10" />}
                    {skill.icon === "python" && <Python class="w-10 h-10" />}
                    {skill.icon === "express" && (
                      <Express class="w-10 h-10 text-black" />
                    )}
                    {skill.icon === "php" && <Laravel class="w-10 h-10" />}
                    {skill.icon === "supabase" && <Supa class="w-10 h-10" />}
                    {skill.icon === "jwt" && <JWT class="w-10 h-10" />}
                    {skill.icon === "stripe" && <Stripe class="w-10 h-10" />}
                  </span>
                  <span class="text-sm font-medium text-gray-700 text-center group-hover:text-green-700 transition-colors">
                    {skill.name}
                  </span>
                </div>
              ))
            }
          </div>
        </div>
      </div>

      <!-- Mobile Accordion -->
      <div
        class="bg-white rounded-xl shadow-md overflow-hidden border border-gray-200 hover:shadow-lg transition-all duration-300"
      >
        <button
          class="w-full px-6 py-4 flex items-center justify-between bg-gradient-to-r from-purple-50 to-violet-50 hover:from-purple-100 hover:to-violet-100 transition-all duration-300 group"
          onclick="toggleAccordion('mobile')"
        >
          <div class="flex items-center">
            <div
              class="w-4 h-4 bg-gradient-to-r from-purple-500 to-violet-500 rounded-full mr-4"
            >
            </div>
            <h3
              class="text-xl font-bold text-gray-800 group-hover:text-purple-600 transition-colors"
            >
              {URL === "/en/" ? "Mobile Development" : "Desarrollo Móvil"}
            </h3>
          </div>
          <svg
            id="mobile-arrow"
            class="w-6 h-6 text-purple-500 transform transition-transform duration-300"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M19 9l-7 7-7-7"></path>
          </svg>
        </button>
        <div id="mobile-content" class="hidden px-6 pb-6">
          <div class="grid grid-cols-1 md:grid-cols-3 gap-4 pt-4">
            {
              skills.mobile.map((skill) => (
                <div class="flex flex-col items-center p-4 bg-gradient-to-br from-purple-50 to-violet-50 rounded-lg hover:from-purple-100 hover:to-violet-100 transition-all duration-200 hover:shadow-md group">
                  <span class="mb-2">
                    {skill.icon === "java" && <Java class="w-10 h-10" />}
                    {skill.icon === "kotlin" && <Kotlin class="w-10 h-10" />}
                    {skill.icon === "expo" && <Expo class="w-10 h-10" />}
                  </span>
                  <span class="text-sm font-medium text-gray-700 text-center group-hover:text-purple-700 transition-colors">
                    {skill.name}
                  </span>
                </div>
              ))
            }
          </div>
        </div>
      </div>

      <!-- Databases Accordion -->
      <div
        class="bg-white rounded-xl shadow-md overflow-hidden border border-gray-200 hover:shadow-lg transition-all duration-300"
      >
        <button
          class="w-full px-6 py-4 flex items-center justify-between bg-gradient-to-r from-yellow-50 to-orange-50 hover:from-yellow-100 hover:to-orange-100 transition-all duration-300 group"
          onclick="toggleAccordion('databases')"
        >
          <div class="flex items-center">
            <div
              class="w-4 h-4 bg-gradient-to-r from-yellow-500 to-orange-500 rounded-full mr-4"
            >
            </div>
            <h3
              class="text-xl font-bold text-gray-800 group-hover:text-yellow-600 transition-colors"
            >
              {URL === "/en/" ? "Databases" : "Bases de Datos"}
            </h3>
          </div>
          <svg
            id="databases-arrow"
            class="w-6 h-6 text-yellow-500 transform transition-transform duration-300"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M19 9l-7 7-7-7"></path>
          </svg>
        </button>
        <div id="databases-content" class="hidden px-6 pb-6">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4 pt-4">
            {
              skills.databases.map((skill) => (
                <div class="flex flex-col items-center p-4 bg-gradient-to-br from-yellow-50 to-orange-50 rounded-lg hover:from-yellow-100 hover:to-orange-100 transition-all duration-200 hover:shadow-md group">
                  <span class="mb-2">
                    {skill.icon === "mysql" && <MySQL class="w-10 h-10" />}
                    {skill.icon === "firebase" && (
                      <Firebase class="w-10 h-10" />
                    )}
                    {skill.icon === "supabase" && <Supa class="w-10 h-10" />}
                    {skill.icon === "mongo" && <Mongo class="w-10 h-10" />}
                  </span>
                  <span class="text-sm font-medium text-gray-700 text-center group-hover:text-yellow-700 transition-colors">
                    {skill.name}
                  </span>
                </div>
              ))
            }
          </div>
        </div>
      </div>

      <!-- Tools Accordion -->
      <div
        class="bg-white rounded-xl shadow-md overflow-hidden border border-gray-200 hover:shadow-lg transition-all duration-300"
      >
        <button
          class="w-full px-6 py-4 flex items-center justify-between bg-gradient-to-r from-gray-50 to-slate-50 hover:from-gray-100 hover:to-slate-100 transition-all duration-300 group"
          onclick="toggleAccordion('tools')"
        >
          <div class="flex items-center">
            <div
              class="w-4 h-4 bg-gradient-to-r from-gray-500 to-slate-500 rounded-full mr-4"
            >
            </div>
            <h3
              class="text-xl font-bold text-gray-800 group-hover:text-gray-600 transition-colors"
            >
              {
                URL === "/en/"
                  ? "Tools & Technologies"
                  : "Herramientas y Tecnologías"
              }
            </h3>
          </div>
          <svg
            id="tools-arrow"
            class="w-6 h-6 text-gray-500 transform transition-transform duration-300"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M19 9l-7 7-7-7"></path>
          </svg>
        </button>
        <div id="tools-content" class="hidden px-6 pb-6">
          <div class="grid grid-cols-1 md:grid-cols-3 gap-4 pt-4">
            {
              skills.tools.map((skill) => (
                <div class="flex flex-col items-center p-4 bg-gradient-to-br from-gray-50 to-slate-50 rounded-lg hover:from-gray-100 hover:to-slate-100 transition-all duration-200 hover:shadow-md group">
                  <span class="mb-2">
                    {skill.icon === "git" && <Github class="w-10 h-10" />}
                    {skill.icon === "cpanel" && <Cpanel class="w-10 h-10" />}
                    {skill.icon === "vite" && <Vite class="w-10 h-10" />}
                    {skill.icon === "todoist" && <Todoist class="w-10 h-10" />}
                    {skill.icon === "slack" && <Slack class="w-10 h-10" />}
                    {skill.icon === "google" && <Google class="w-10 h-10" />}
                    {skill.icon === "meta" && <Meta class="w-10 h-10" />}
                    {skill.icon === "vercel" && (
                      <Vercel class="w-10 h-10 text-black" />
                    )}
                    {skill.icon === "netlify" && <Netlify class="w-10 h-10" />}
                  </span>
                  <span class="text-sm font-medium text-gray-700 text-center group-hover:text-yellow-700 transition-colors">
                    {skill.name}
                  </span>
                </div>
              ))
            }
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
<script is:inline>
  let currentOpenSection = null;

  function toggleAccordion(section) {
    const newContent = document.getElementById(`${section}-content`);
    const newArrow = document.getElementById(`${section}-arrow`);

    // Si ya está abierto, simplemente lo cerramos
    const isOpening = newContent.classList.contains("hidden");

    // Si hay otro abierto, ciérralo
    if (currentOpenSection && currentOpenSection !== section) {
      const oldContent = document.getElementById(
        `${currentOpenSection}-content`
      );
      const oldArrow = document.getElementById(`${currentOpenSection}-arrow`);

      if (oldContent && !oldContent.classList.contains("hidden")) {
        oldContent.style.transition =
          "opacity 0.3s ease, transform 0.3s ease, max-height 0.3s ease";
        oldContent.style.opacity = "0";
        oldContent.style.transform = "translateY(-10px)";
        oldContent.style.maxHeight = "0px";
        oldArrow.style.transform = "rotate(0deg)";

        setTimeout(() => {
          oldContent.classList.add("hidden");
          oldContent.style.removeProperty("transition");
          oldContent.style.removeProperty("opacity");
          oldContent.style.removeProperty("transform");
          oldContent.style.removeProperty("max-height");
        }, 300);
      }
    }

    // Si se va a abrir el nuevo, ábrelo
    if (isOpening) {
      newContent.classList.remove("hidden");
      newContent.style.maxHeight = newContent.scrollHeight + "px";
      newArrow.style.transform = "rotate(180deg)";
      newContent.style.opacity = "0";
      newContent.style.transform = "translateY(-10px)";
      setTimeout(() => {
        newContent.style.transition = "opacity 0.3s ease, transform 0.3s ease";
        newContent.style.opacity = "1";
        newContent.style.transform = "translateY(0)";
      }, 10);
      currentOpenSection = section;
    } else {
      // Si se vuelve a dar clic al mismo abierto, solo se cierra
      newContent.style.transition =
        "opacity 0.3s ease, transform 0.3s ease, max-height 0.3s ease";
      newContent.style.opacity = "0";
      newContent.style.transform = "translateY(-10px)";
      newContent.style.maxHeight = "0px";
      newArrow.style.transform = "rotate(0deg)";

      setTimeout(() => {
        newContent.classList.add("hidden");
        newContent.style.removeProperty("transition");
        newContent.style.removeProperty("opacity");
        newContent.style.removeProperty("transform");
        newContent.style.removeProperty("max-height");
      }, 300);

      currentOpenSection = null;
    }
  }
</script>
